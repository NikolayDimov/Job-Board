# // Read Operations from server
type Query {
    company(id: ID!): Company
    job(id: ID!): Job
    jobs(limit: Int, offset: Int): JobSubList
}

# // Write Operations to server
# :Job -> return type. We return the new Job object
type Mutation {
    createJob(input: CreateJobInput!): Job
    deleteJob(id: ID!): Job
    updateJob(input: UpdateJobInput!): Job
}

# Output object type
type Company {
    id: ID!
    name: String!
    description: String
    jobs: [Job!]!
}

# Output object type
type Job {
    id: ID!
    """
    The __date__ when the job was published, in ISO-8601 format. E.g. `2022-12-31`.
    """
    date: String!
    title: String!
    company: Company!
    description: String
}

# Output object type
type JobSubList {
    items: [Job!]!
    totalCount: Int!
}

# Input object type
input CreateJobInput {
    title: String!
    description: String
}

# Input object type
input UpdateJobInput {
    id: ID!
    title: String!
    description: String
}
